name: Unit tests

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  linter:
    name: Linters
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - name: Setup Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: 3.11
    - name: Cache python packages
      uses: actions/cache@v3
      id: cache
      with:
        path: ${{ env.Python3_ROOT_DIR }}/lib/python3.11/site-packages
        key: dev-${{ hashFiles('**/pyproject.toml') }}-3.11
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: pip install -e '.[dev]'
    - name: Lint with ruff
      run: |
        pip install --upgrade --force-reinstall ruff
        python3 -m ruff check
    - name: Run mypy
      run: python -m mypy

  tests:
    needs: linter
    strategy:
      matrix:
        python-version: ["3.11", "3.10", "3.9"]
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install ghostscript
        run: sudo apt-get install ghostscript
      - name: Cache python packages
        uses: actions/cache@v3
        id: cache
        with:
          path: ${{ env.Python3_ROOT_DIR }}/lib/python${{ matrix.python-version }}/site-packages
          key: dev-${{ hashFiles('**/pyproject.toml') }}-${{ matrix.python-version }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip install -e '.[dev]'
      - name: Run tests with coverage
        run:
          python -m pytest --cov -n=auto --cov-fail-under=98 --cov-report=
      - name: Upload coverage to coveralls
        if: github.event_name == 'push'
        uses: coverallsapp/github-action@v2.2.3
